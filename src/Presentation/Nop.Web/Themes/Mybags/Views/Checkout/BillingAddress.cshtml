@model CheckoutBillingAddressModel
@using Nop.Web.Models.Checkout;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
}
<div class="page checkout-page billing-address-page account-page">
    @Html.Action("CheckoutProgress", "Checkout", new { step = CheckoutProgressStep.Address })
    <div class="container">
        <div class="col-md-12 product-filter"></div>
        <h2>@T("Checkout.BillingAddress")</h2>

        <div class="page-body checkout-data">
            @using (Html.BeginRouteForm("CheckoutBillingAddress", FormMethod.Post))
            {
                <div class="billing-addresses">
                    @Html.Widget("checkout_billing_address_top")
                    @if (Model.ExistingAddresses.Count > 0)
                    {
                        <div class="address-listing">
                            <div class="row1">
                                <div class="col-md-12 mb-30">
                                    <div class="section select-billing-address">
                                        <div class="title">
                                            <h3>@T("Checkout.SelectBillingAddress")</h3>
                                        </div>
                                        <div class="address-grid">
                                            @foreach (var item in Model.ExistingAddresses)
                                            {
                                                <div class="col-md-4 col-sm-6 col-xs-12">
                                                    <div class="address-item">
                                                        <div class="title">
                                                            <h3>@item.FirstName @item.LastName</h3>
                                                        </div>
                                                        <ul class="address-box">
                                                            <li class="email">
                                                                <label>@T("Address.Fields.Email"):</label>
                                                                <span>@item.Email</span>
                                                            </li>
                                                            @if (item.PhoneEnabled)
                                                            {
                                                                <li class="phone">
                                                                    <label>@T("Address.Fields.PhoneNumber"):</label>
                                                                    <span>@item.PhoneNumber</span>
                                                                </li>
                                                            }
                                                            @if (item.FaxEnabled)
                                                            {
                                                                <li class="fax">
                                                                    <label>@T("Address.Fields.FaxNumber"):</label>
                                                                    <span>@item.FaxNumber</span>
                                                                </li>
                                                            }
                                                            @if (item.CompanyEnabled && !String.IsNullOrEmpty(item.Company))
                                                            {
                                                                <li class="company">
                                                                    @item.Company
                                                                </li>
                                                            }
                                                            @if (item.StreetAddressEnabled)
                                                            {
                                                                <li class="address1">
                                                                    @item.Address1
                                                                </li>
                                                            }
                                                            @if (item.StreetAddress2Enabled && !String.IsNullOrEmpty(item.Address2))
                                                            {
                                                                <li class="address2">
                                                                    @item.Address2
                                                                </li>
                                                            }
                                                            @if (item.CityEnabled || item.StateProvinceEnabled || item.ZipPostalCodeEnabled)
                                                            {
                                                                <li class="city-state-zip">
                                                                    @if (item.CityEnabled)
                                                                    {
                                                                        @item.City
                                                                    }
                                                                    @if (item.CityEnabled && (item.StateProvinceEnabled || item.ZipPostalCodeEnabled))
                                                                    {
                                                                        <text>,</text>
                                                                    }
                                                                    @if (item.StateProvinceEnabled)
                                                                    {
                                                                        @item.StateProvinceName
                                                                    }
                                                                    @if (item.ZipPostalCodeEnabled)
                                                                    {
                                                                        @item.ZipPostalCode
                                                                    }
                                                                </li>
                                                            }
                                                            @if (item.CountryEnabled && !String.IsNullOrEmpty(item.CountryName))
                                                            {
                                                                <li class="country">
                                                                    @item.CountryName
                                                                </li>
                                                            }
                                                            @if (!String.IsNullOrEmpty(item.FormattedCustomAddressAttributes))
                                                            {
                                                                <li class="custom-attributes-view">
                                                                    @Html.Raw(item.FormattedCustomAddressAttributes)
                                                                </li>
                                                            }
                                                        </ul>
                                                        <div class="select-button">
                                                            <input type="button" value="@T("Checkout.BillToThisAddress")" class="btn btn-primary select-billing-address-button" onclick="setLocation('@Url.RouteUrl("CheckoutSelectBillingAddress", new {addressId = item.Id})') " />
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    }
                    @Html.Widget("checkout_billing_address_middle")
                    <div class="section new-billing-address trade-form">                       
                            @if (Model.ExistingAddresses.Count > 0)
                            {
                                <h3>@T("Checkout.OrEnterNewAddress")</h3>
                            }
                            else
                            {
                                <h3>@T("Checkout.EnterBillingAddress")</h3>
                            }                       
                        <div class="enter-address col-md-12">
                            <div class="col-md-8 col-md-offset-0">
                                <div class="row">
                                    <div class="col-md-12 mb-30">
                                        @{
                var validationSummary = Html.ValidationSummary(true);
                                        }
                                        @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                                        {
                                            <div class="message-error">@validationSummary</div>
                                        }
                                        @{
                                        var dataDictAddress = new ViewDataDictionary();
                                        //Merge ModelState (required for validation)
                                        dataDictAddress.ModelState.Merge(ViewData.ModelState);
                                        dataDictAddress.TemplateInfo.HtmlFieldPrefix = "NewAddress";
                                        @Html.Partial("_CreateOrUpdateAddress", Model.NewAddress, dataDictAddress)
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                                @Html.Widget("checkout_billing_address_bottom")
                    <div class="buttons">
                        <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn btn-primary new-address-next-step-button" />
                    </div>
                            </div>
                            
                            }
            <div class="clear"></div>
            <div class="section order-summary trade-form">
                <div class="title">
                    <h3>@T("Checkout.OrderSummary")</h3>
                </div>
                @Html.Action("OrderSummary", "ShoppingCart")
            </div>
                        </div>
    </div>

</div>
