@model CheckoutShippingAddressModel
@using Nop.Web.Models.Checkout;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
}
<div class="page checkout-page shipping-address-page account-page">
    @Html.Action("CheckoutProgress", "Checkout", new { step = CheckoutProgressStep.Address })
    <div class="container">
        <div class="col-md-12 product-filter"></div>
        <h2>@T("Checkout.ShippingAddress")</h2>

        <div class="page-body checkout-data">
            @using (Html.BeginRouteForm("CheckoutShippingAddress", FormMethod.Post))
        {
            if (Model.AllowPickUpInStore)
            {
        <div class="section pickup-in-store">
            <div class="selector">
                @{
                var pickupInStoreName = T("Checkout.PickUpInStore").Text;
                if (!String.IsNullOrEmpty(Model.PickUpInStoreFee))
                {
                    pickupInStoreName = T("Checkout.PickUpInStoreAndFee", Model.PickUpInStoreFee).Text;
                }
                }
                @Html.CheckBoxFor(x => x.PickUpInStore)
                <label for="@Html.FieldIdFor(model => model.PickUpInStore)">@pickupInStoreName</label>
            </div>
            <div class="description">
                @T("Checkout.PickUpInStore.Description")
            </div>
            <script type="text/javascript">
                        $(document).ready(function () {
                            $("#@Html.FieldIdFor(model => model.PickUpInStore)").change(togglePickUpInStore);
                            togglePickUpInStore();
                        });
                        function togglePickUpInStore() {
                            if ($('#@Html.FieldIdFor(model => model.PickUpInStore)').is(':checked')) {
                                $('#shipping-addresses-form').hide();
                            } else {
                                $('#shipping-addresses-form').show();
                            }
                        }
            </script>
        </div>
            }
        <div class="shipping-addresses" id="shipping-addresses-form">
            @Html.Widget("checkout_shipping_address_top")
            @if (Model.ExistingAddresses.Count > 0)
                {
                <div class="address-listing">
                    <div class="row1">
                        <div class="col-md-12 mb-30">
                            <div class="section select-shipping-address">
                                <div class="title">
                                    <h3>@T("Checkout.SelectShippingAddress")</h3>
                                </div>
                                <div class="address-grid">
                                    @foreach (var item in Model.ExistingAddresses)
                                        {
                                        <div class="col-md-4 col-sm-6 col-xs-12">
                                            <div class="address-item">
                                                <div class="title">
                                                    <h3>@item.FirstName @item.LastName</h3>
                                                </div>
                                                <ul class="address-box">
                                                    <li class="email">
                                                        <label>@T("Address.Fields.Email"):</label>
                                                        <span>@item.Email</span>
                                                    </li>
                                                    @if (item.PhoneEnabled)
                                        {
                                                        <li class="phone">
                                                            <label>@T("Address.Fields.PhoneNumber"):</label>
                                                            <span>@item.PhoneNumber</span>
                                                        </li>
                                        }
                                                    @if (item.FaxEnabled)
                                        {
                                                        <li class="fax">
                                                            <label>@T("Address.Fields.FaxNumber"):</label>
                                                            <span>@item.FaxNumber</span>
                                                        </li>
                                        }
                                                    @if (item.CompanyEnabled && !String.IsNullOrEmpty(item.Company))
                                        {
                                                        <li class="company">
                                                            @item.Company
                                                        </li>
                                        }
                                                    @if (item.StreetAddressEnabled)
                                        {
                                                        <li class="address1">
                                                            @item.Address1
                                                        </li>
                                        }
                                                    @if (item.StreetAddress2Enabled && !String.IsNullOrEmpty(item.Address2))
                                        {
                                                        <li class="address2">
                                                            @item.Address2
                                                        </li>
                                        }
                                                    @if (item.CityEnabled || item.StateProvinceEnabled || item.ZipPostalCodeEnabled)
                                        {
                                                        <li class="city-state-zip">
                                                            @if (item.CityEnabled)
                                                {
                                        @item.City
                                                }
                                                            @if (item.CityEnabled && (item.StateProvinceEnabled || item.ZipPostalCodeEnabled))
                                                {
                                        <text>,</text>
                                                }
                                                            @if (item.StateProvinceEnabled)
                                                {
                                        @item.StateProvinceName
                                                }
                                                            @if (item.ZipPostalCodeEnabled)
                                                {
                                        @item.ZipPostalCode
                                                }
                                                        </li>
                                        }
                                                    @if (item.CountryEnabled && !String.IsNullOrEmpty(item.CountryName))
                                        {
                                                        <li class="country">
                                                            @item.CountryName
                                                        </li>
                                        }
                                                    @if (!String.IsNullOrEmpty(item.FormattedCustomAddressAttributes))
                                        {
                                                        <li class="custom-attributes-view">
                                                            @Html.Raw(item.FormattedCustomAddressAttributes)
                                                        </li>
                                        }
                                                </ul>
                                                <div class="select-button">
                                                    <input type="button" value="@T("Checkout.ShipToThisAddress")" class="btn btn-primary select-shipping-address-button" onclick="setLocation('@Url.RouteUrl("CheckoutSelectShippingAddress", new { addressid = item.Id })') " />
                                                </div>
                                            </div>
                                        </div>
                                        }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                }
            @Html.Widget("checkout_shipping_address_middle")
            <div class="section new-shipping-address trade-form col-md-12">

                @if (Model.ExistingAddresses.Count > 0)
                        {
                    <h3>@T("Checkout.OrEnterNewAddress")</h3>
                        }
                        else
                        {
                    <h3>@T("Checkout.EnterShippingAddress")</h3>
                        }

                <div class="enter-address col-md-12">
                    <div class="col-md-8 col-md-offset-0">
                        <div class="row">
                            <div class="col-md-12 mb-30">
                                @{
            var validationSummary = Html.ValidationSummary(true);
                                }
                                @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                                    {
                                    <div class="message-error">@validationSummary</div>
                                    }
                                @{
                                    var dataDictAddress = new ViewDataDictionary();
                                    //Merge ModelState (required for validation)
                                    dataDictAddress.ModelState.Merge(ViewData.ModelState);
                                    dataDictAddress.TemplateInfo.HtmlFieldPrefix = "NewAddress";
                                    @Html.Partial("_CreateOrUpdateAddress", Model.NewAddress, dataDictAddress)
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="buttons">
                    <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn btn-primary new-address-next-step-button" />
                </div>
            </div>
            @Html.Widget("checkout_shipping_address_bottom")

        </div>

        }
            <div class="clear"></div>
            <div class="section order-summary trade-form">
                <h3>@T("Checkout.OrderSummary")</h3>
                @Html.Action("OrderSummary", "ShoppingCart")

            </div>
        </div>
    </div>
</div>

