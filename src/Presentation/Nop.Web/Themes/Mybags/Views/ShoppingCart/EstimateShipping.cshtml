@model EstimateShippingModel
@using Nop.Web.Models.ShoppingCart;
@if (Model.Enabled)
{
    <div class="shipping">
        <script type="text/javascript">
            $(function() {
                $("#@Html.FieldIdFor(model => model.CountryId)").change(function() {
                    var selectedItem = $(this).val();
                    var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                    var estimateProgress = $("#estimate-shipping-loading-progress");
                    estimateProgress.show();
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                        data: { "countryId": selectedItem, "addSelectStateItem": "false" },
                        success: function(data) {
                            ddlStates.html('');
                            $.each(data, function(id, option) {
                                ddlStates.append($('<option></option>').val(option.id).html(option.name));
                            });
                            estimateProgress.hide();
                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                            alert('Failed to retrieve states.');
                            estimateProgress.hide();
                        }
                    });
                });
            });
        </script>

        <div class="estimate-shipping trade-form text-center shippingBackground">
            <div class="title">
                <h2>@T("ShoppingCart.EstimateShipping")</h2>
            </div>
            <div class="hint">@T("ShoppingCart.EstimateShipping.Tooltip")</div>
            <div class="row">
                <div class="col-md-12 mb-30">
                    <div class="shipping-options form-fields">
                        <div class="field">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.CountryId, new { }, ":")
                                <span class="required">*</span>
                            </div>
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries, new { @class = "country-input" })

                            </div>
                        </div>
                        <div class="field">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.StateProvinceId, new { }, ":")
                            </div>
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates, new { @class = "state-input" })
                                <span id="estimate-shipping-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                            </div>
                        </div>
                        <div class="field">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.ZipPostalCode, new { }, ":")
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.ZipPostalCode, new { @class = "zip-input" })
                            </div>
                        </div>
                        <div class="buttons">
							 <div class="col-md-4"></div>
                            <div class="col-md-8 textLeft">
                                <input type="submit" name="estimateshipping" value="@T("ShoppingCart.EstimateShipping.Button")" class="btn btn-primary estimate-shipping-button" />
                            </div>
                        </div>
                    </div>
                    @*@if (Model.ShippingOptions.Count > 0)
                    {
                        <ul class="shipping-results">
                            @foreach (var shippingOption in Model.ShippingOptions)
                    {
                        <li class="shipping-option-item">
                            <strong class="option-name">
                                @T("ShoppingCart.EstimateShipping.ShippingOptionWithRate", shippingOption.Name, shippingOption.Price)
                            </strong>
                            <span class="option-description">
                                @Html.Raw(shippingOption.Description)
                            </span>
                        </li>
                    }
                        </ul>
                    }
                    else if (Model.Warnings.Count > 0)
                    {
                        <div class="message-error">
                            <ul>
                                @foreach (var error in Model.Warnings)
                        {
                        <li>@error</li>
                        }
                            </ul>
                        </div>
                    }*@
                </div>
            </div>
        </div>
    </div>
}