@model CustomerOrderListModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
}
@using Nop.Web.Models.Customer
@using Nop.Web.Models.Order;
@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.Orders })
}

    <div class="inner-page account-page order-list-page">
        <div class="trade-form text-center">
            <h2>@T("Account.CustomerOrders")</h2>
                @if (Model.RecurringOrders.Count > 0)
                {
                    <div class="section recurring-payments">
                        <div class="title">
                            <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
                        </div>
                        @using (Html.BeginForm())
                        {
                        @Html.AntiForgeryToken()
                        <div class="table-wrapper">
                            <table class="table-responsive data-table">
                                <colgroup>
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                    <col />
                                </colgroup>
                                <thead>
                                    <tr>
                                        <th class="start-date">
                                            @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                        </th>
                                        <th class="cycle-info">
                                            @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                        </th>
                                        <th class="next-payment">
                                            @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                        </th>
                                        <th class="total-cycles">
                                            @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                        </th>
                                        <th class="cycles-remaining">
                                            @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                        </th>
                                        <th class="initial-order">
                                            @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                        </th>
                                        <th class="cancel">
                                            @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.RecurringOrders)
                                        {
                            <tr>
                                <td class="start-date">
                                    @item.StartDate
                                </td>
                                <td class="cycle-info">
                                    @item.CycleInfo
                                </td>
                                <td class="next-payment">
                                    @item.NextPayment
                                </td>
                                <td class="total-cycles">
                                    @item.TotalCycles
                                </td>
                                <td class="cycles-remaining">
                                    @item.CyclesRemaining
                                </td>
                                <td class="initial-order">
                                    <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderId)</a>
                                </td>
                                <td class="cancel">
                                    @if (item.CanCancel)
                                                    {
                                        <input type="submit" name="cancelRecurringPayment@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.Cancel")" class="button-2 cancel-recurring-order-button" />
                                                    }
                                </td>
                            </tr>
                                        }
                                </tbody>
                            </table>
                        </div>
                        }
                    </div>
                    if (Model.RecurringPaymentErrors.Any())
                    {
                        <div class="message-error">
                            <ul>
                                @foreach (var error in Model.RecurringPaymentErrors)
                                {
                                <li>@error</li>
                                }
                            </ul>
                        </div>
                    }
                }
                @if (Model.Orders.Count > 0)
                {
                <div class="table-wrapper">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th> @T("Account.CustomerOrders.OrderNumber")</th>
                                <th> @T("Account.CustomerOrders.OrderStatus")</th>
                                <th>@T("Account.CustomerOrders.OrderDate")</th>
                                <th>@T("Account.CustomerOrders.OrderTotal")</th>
                                <th class="text-right">@T("Account.CustomerOrders.OrderDetails")</th>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Orders)
                            {
                                <tr>
                                    <td align="left">
                                        @order.Id
                                    </td>
                
                                    <td align="left">
                                        <span class="order-status @order.OrderStatusEnum.ToString().ToLowerInvariant()">@order.OrderStatus</span>
                                    </td>
                
                                    <td align="left">
                                        @order.CreatedOn.ToString("d")
                                    </td>
                
                                    <td align="left">
                                        @order.OrderTotal
                                    </td>
                
                                    <td class="text-right">
                                        @if (order.IsReturnRequestAllowed)
                                        {
                                            <input type="button" value="@T("Account.CustomerOrders.ReturnItems")" class="btn btn-primary return-items-button" onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })')" />
                                        }
                                        <input type="button" value="@T("Account.CustomerOrders.OrderDetails")" class="btn btn-primary order-details-button" onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                }
                else
                {
                <div class="no-data">
                    @T("Account.CustomerOrders.NoOrders")
                </div>
                }
        </div>
    </div>

